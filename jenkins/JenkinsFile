pipeline {
    agent any

    stages {
        stage('Unit test backend') {
            agent {
                docker {
                    image 'snakee/golang-junit:1.21'
                    reuseNode true
                }
            }
            steps {
                dir('bugtracker-backend') {
                    sh '''
        export WORKSPACE=$(pwd)

        # Set writable Go cache directories
        export GOCACHE=$WORKSPACE/.cache/go-build
        export GOMODCACHE=$WORKSPACE/.cache/go-mod

        mkdir -p "$GOCACHE" "$GOMODCACHE"

        # Run tests and generate JUnit report
        go test -v ./... | tee result.log | go-junit-report > report.xml
    '''
                    junit 'report.xml'
                }
            }
        }
        stage('Unit test frontend') {
            agent {
                docker {
                    image 'node:20-alpine'
                    reuseNode true
                }
            }
            steps {
                dir('bugtracker-frontend') {
                    sh '''
        npm ci
        npm test
                    '''
                }
            }
            post {
                always {
                    junit 'bugtracker-frontend/test-results.xml'
                }
            }
    }
    }
}
